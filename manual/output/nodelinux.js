Ext.data.JsonP.nodelinux({"tagname":"class","name":"nodelinux","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Corey Butler"]},"private":null,"id":"class-nodelinux","members":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"node-linux.js","href":"node-linux.html#nodelinux"}],"html_meta":{"author":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/node-linux.html#nodelinux' target='_blank'>node-linux.js</a></div></pre><div class='doc-contents'><p>This is a standalone module, originally designed for internal use in <a href=\"http://github.com/thinkfirst/NGN\">NGN</a>.\nHowever; it is capable of providing the same features for Node.JS scripts\nindependently of NGN.</p>\n\n<h3>Getting node-linux</h3>\n\n<p><code>npm install node-linux</code></p>\n\n<h3>Using node-linux</h3>\n\n<p><code>var nm = require('node-linux');</code></p>\n</div><div class='members'></div></div>"});